{"ast":null,"code":"import{createSlice,nanoid}from\"@reduxjs/toolkit\";var initialState=[];export var defaultPhrases={\"family\":{phraseText:\"Family\",phraseType:\"default\"},\"thisisus\":{phraseText:\"This is us\",phraseType:\"default\"}};var AdditionalPhraseSlice=createSlice({name:'additionalPhrases',initialState:initialState,reducers:{customPhraseAdded:{reducer:function reducer(state,action){state.push(action.payload);},prepare:function prepare(_ref){var phraseText=_ref.phraseText,phraseType=_ref.phraseType,phraseColor=_ref.phraseColor;return{payload:{id:nanoid(),phraseText:phraseText,phraseType:phraseType,phraseColor:phraseColor}};}},// adding default phrase data from dictionary\ndefaultPhraseAdded:function defaultPhraseAdded(state,action){var defaultPhrase=action.payload.defaultPhrase;var _defaultPhrases$defau=defaultPhrases[defaultPhrase],phraseText=_defaultPhrases$defau.phraseText,phraseType=_defaultPhrases$defau.phraseType;state.push({id:nanoid(),phraseText:phraseText,phraseType:phraseType,phraseColor:\"default\"});},phraseDeleted:function phraseDeleted(state,action){var id=action.payload.id;//const existingPhrase = state.find(phrase => phrase.id === id);\n//const idx = state.indexOf(existingPhrase);\n//state.splice(idx, 1);\nreturn state.filter(function(phrase){return phrase.id!==id;});},allPhrasesDeleted:function allPhrasesDeleted(state){return[];}}});var _AdditionalPhraseSlic=AdditionalPhraseSlice.actions,customPhraseAdded=_AdditionalPhraseSlic.customPhraseAdded,defaultPhraseAdded=_AdditionalPhraseSlic.defaultPhraseAdded,phraseDeleted=_AdditionalPhraseSlic.phraseDeleted,allPhrasesDeleted=_AdditionalPhraseSlic.allPhrasesDeleted;export{customPhraseAdded,defaultPhraseAdded,phraseDeleted,allPhrasesDeleted};export default AdditionalPhraseSlice.reducer;","map":{"version":3,"names":["createSlice","nanoid","initialState","defaultPhrases","phraseText","phraseType","AdditionalPhraseSlice","name","reducers","customPhraseAdded","reducer","state","action","push","payload","prepare","_ref","phraseColor","id","defaultPhraseAdded","defaultPhrase","_defaultPhrases$defau","phraseDeleted","filter","phrase","allPhrasesDeleted","_AdditionalPhraseSlic","actions"],"sources":["/home/luc/Documents/luclongin.github.io/src/features/additionalPhrase/AdditionalPhraseSlice.js"],"sourcesContent":["import { createSlice, nanoid } from \"@reduxjs/toolkit\";\n\nconst initialState = [];\n\nexport const defaultPhrases = {\n      \"family\": {\n            phraseText: \"Family\",\n            phraseType: \"default\"\n      },\n      \"thisisus\": {\n            phraseText: \"This is us\",\n            phraseType: \"default\"\n      }\n};\n\nconst AdditionalPhraseSlice = createSlice({\n      name: 'additionalPhrases',\n      initialState,\n      reducers: {\n            customPhraseAdded: {\n                  reducer(state, action) {\n                        state.push(action.payload)\n                  },\n                  prepare({phraseText, phraseType, phraseColor}) {\n                        return {\n                              payload: {\n                                    id: nanoid(),\n                                    phraseText,\n                                    phraseType,\n                                    phraseColor\n                              }\n                        }\n                  }\n            },\n            // adding default phrase data from dictionary\n            defaultPhraseAdded(state, action) {\n                  const {defaultPhrase} = action.payload;\n                  const {phraseText, phraseType} = defaultPhrases[defaultPhrase];\n                  state.push({\n                        id: nanoid(),\n                        phraseText: phraseText,\n                        phraseType: phraseType,\n                        phraseColor: \"default\"\n                  });\n            },\n            phraseDeleted(state, action) {\n                  const {id} = action.payload;\n                  //const existingPhrase = state.find(phrase => phrase.id === id);\n                  //const idx = state.indexOf(existingPhrase);\n                  //state.splice(idx, 1);\n                  return state.filter(phrase => phrase.id !== id);\n            },\n            allPhrasesDeleted(state) {\n                  return []\n            }\n      }\n})\n\nexport const {\n            customPhraseAdded,\n            defaultPhraseAdded,\n            phraseDeleted,\n            allPhrasesDeleted\n      } = AdditionalPhraseSlice.actions;\n\n\nexport default AdditionalPhraseSlice.reducer;"],"mappings":"AAAA,OAASA,WAAW,CAAEC,MAAM,KAAQ,kBAAkB,CAEtD,GAAM,CAAAC,YAAY,CAAG,EAAE,CAEvB,MAAO,IAAM,CAAAC,cAAc,CAAG,CACxB,QAAQ,CAAE,CACJC,UAAU,CAAE,QAAQ,CACpBC,UAAU,CAAE,SAClB,CAAC,CACD,UAAU,CAAE,CACND,UAAU,CAAE,YAAY,CACxBC,UAAU,CAAE,SAClB,CACN,CAAC,CAED,GAAM,CAAAC,qBAAqB,CAAGN,WAAW,CAAC,CACpCO,IAAI,CAAE,mBAAmB,CACzBL,YAAY,CAAZA,YAAY,CACZM,QAAQ,CAAE,CACJC,iBAAiB,CAAE,CACbC,OAAO,UAAAA,QAACC,KAAK,CAAEC,MAAM,CAAE,CACjBD,KAAK,CAACE,IAAI,CAACD,MAAM,CAACE,OAAO,CAAC,CAChC,CAAC,CACDC,OAAO,UAAAA,QAAAC,IAAA,CAAwC,IAAtC,CAAAZ,UAAU,CAAAY,IAAA,CAAVZ,UAAU,CAAEC,UAAU,CAAAW,IAAA,CAAVX,UAAU,CAAEY,WAAW,CAAAD,IAAA,CAAXC,WAAW,CACtC,MAAO,CACDH,OAAO,CAAE,CACHI,EAAE,CAAEjB,MAAM,CAAC,CAAC,CACZG,UAAU,CAAVA,UAAU,CACVC,UAAU,CAAVA,UAAU,CACVY,WAAW,CAAXA,WACN,CACN,CAAC,CACP,CACN,CAAC,CACD;AACAE,kBAAkB,UAAAA,mBAACR,KAAK,CAAEC,MAAM,CAAE,CAC5B,GAAO,CAAAQ,aAAa,CAAIR,MAAM,CAACE,OAAO,CAA/BM,aAAa,CACpB,IAAAC,qBAAA,CAAiClB,cAAc,CAACiB,aAAa,CAAC,CAAvDhB,UAAU,CAAAiB,qBAAA,CAAVjB,UAAU,CAAEC,UAAU,CAAAgB,qBAAA,CAAVhB,UAAU,CAC7BM,KAAK,CAACE,IAAI,CAAC,CACLK,EAAE,CAAEjB,MAAM,CAAC,CAAC,CACZG,UAAU,CAAEA,UAAU,CACtBC,UAAU,CAAEA,UAAU,CACtBY,WAAW,CAAE,SACnB,CAAC,CAAC,CACR,CAAC,CACDK,aAAa,UAAAA,cAACX,KAAK,CAAEC,MAAM,CAAE,CACvB,GAAO,CAAAM,EAAE,CAAIN,MAAM,CAACE,OAAO,CAApBI,EAAE,CACT;AACA;AACA;AACA,MAAO,CAAAP,KAAK,CAACY,MAAM,CAAC,SAAAC,MAAM,QAAI,CAAAA,MAAM,CAACN,EAAE,GAAKA,EAAE,GAAC,CACrD,CAAC,CACDO,iBAAiB,UAAAA,kBAACd,KAAK,CAAE,CACnB,MAAO,EAAE,CACf,CACN,CACN,CAAC,CAAC,CAEK,IAAAe,qBAAA,CAKGpB,qBAAqB,CAACqB,OAAO,CAJ3BlB,iBAAiB,CAAAiB,qBAAA,CAAjBjB,iBAAiB,CACjBU,kBAAkB,CAAAO,qBAAA,CAAlBP,kBAAkB,CAClBG,aAAa,CAAAI,qBAAA,CAAbJ,aAAa,CACbG,iBAAiB,CAAAC,qBAAA,CAAjBD,iBAAiB,CACW,OAAAhB,iBAAA,CAAAU,kBAAA,CAAAG,aAAA,CAAAG,iBAAA,EAGxC,cAAe,CAAAnB,qBAAqB,CAACI,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}