{"ast":null,"code":"import _defineProperty from\"/home/luc/Documents/luclongin.github.io/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import _toConsumableArray from\"/home/luc/Documents/luclongin.github.io/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _regeneratorRuntime from\"/home/luc/Documents/luclongin.github.io/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/home/luc/Documents/luclongin.github.io/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";var _extraReducers;import{createSlice,createAsyncThunk}from\"@reduxjs/toolkit\";import AdditionalPhraseService from\"../../services/AdditionalPhraseService\";var initialState=[];export var createAdditionalPhrase=createAsyncThunk(\"orders/createAdditionalPhrase\",/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(phraseData){var res;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.next=2;return AdditionalPhraseService.createAdditionalPhrase(phraseData);case 2:res=_context.sent;return _context.abrupt(\"return\",res.data);case 4:case\"end\":return _context.stop();}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}());export var getAdditionalPhrases=createAsyncThunk(\"orders/getAdditionalPhrases\",/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(){var res;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1)switch(_context2.prev=_context2.next){case 0:_context2.next=2;return AdditionalPhraseService.getAdditionalPhrases();case 2:res=_context2.sent;return _context2.abrupt(\"return\",res.data);case 4:case\"end\":return _context2.stop();}},_callee2);})));export var deleteAdditionalPhrase=createAsyncThunk(\"orders/deleteAdditionalPhrase\",/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(orderId){var res;return _regeneratorRuntime().wrap(function _callee3$(_context3){while(1)switch(_context3.prev=_context3.next){case 0:_context3.next=2;return AdditionalPhraseService.deleteAdditionalPhrase(orderId);case 2:res=_context3.sent;return _context3.abrupt(\"return\",res.data);case 4:case\"end\":return _context3.stop();}},_callee3);}));return function(_x2){return _ref3.apply(this,arguments);};}());var uploadedAdditionalPhraseSlice=createSlice({name:\"additionalPhrase\",initialState:initialState,extraReducers:(_extraReducers={},_defineProperty(_extraReducers,createAdditionalPhrase.fulfilled,function(state,action){state.push(action.payload);}),_defineProperty(_extraReducers,getAdditionalPhrases.fulfilled,function(state,action){return _toConsumableArray(action.payload);}),_defineProperty(_extraReducers,deleteAdditionalPhrase.fulfilled,function(state,action){var index=state.findIndex(function(_ref4){var orderId=_ref4.orderId;return orderId===action.payload.orderId;});state.splice(index,1);}),_extraReducers)});var reducer=uploadedAdditionalPhraseSlice.reducer;export default reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","AdditionalPhraseService","initialState","createAdditionalPhrase","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","phraseData","res","wrap","_callee$","_context","prev","next","sent","abrupt","data","stop","_x","apply","arguments","getAdditionalPhrases","_callee2","_callee2$","_context2","deleteAdditionalPhrase","_ref3","_callee3","orderId","_callee3$","_context3","_x2","uploadedAdditionalPhraseSlice","name","extraReducers","_extraReducers","_defineProperty","fulfilled","state","action","push","payload","_toConsumableArray","index","findIndex","_ref4","splice","reducer"],"sources":["/home/luc/Documents/luclongin.github.io/src/features/additionalPhraseUpload/additionalPhraseUploadSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport AdditionalPhraseService from \"../../services/AdditionalPhraseService\";\n\nconst initialState = [];\n\nexport const createAdditionalPhrase = createAsyncThunk(\n      \"orders/createAdditionalPhrase\",\n      async (phraseData) => {\n            const res = await AdditionalPhraseService.createAdditionalPhrase(phraseData);\n            return res.data;\n      }\n);\n\nexport const getAdditionalPhrases = createAsyncThunk(\n      \"orders/getAdditionalPhrases\",\n      async () => {\n            const res = await AdditionalPhraseService.getAdditionalPhrases();\n            return res.data;\n      }\n);\n\nexport const deleteAdditionalPhrase = createAsyncThunk(\n      \"orders/deleteAdditionalPhrase\",\n      async (orderId) => {\n            const res = await AdditionalPhraseService.deleteAdditionalPhrase(orderId);\n            return res.data;\n      }\n)\n\nconst uploadedAdditionalPhraseSlice = createSlice({\n      name: \"additionalPhrase\",\n      initialState,\n      extraReducers: {\n            [createAdditionalPhrase.fulfilled]: (state, action) => {\n                  state.push(action.payload);\n            },\n            [getAdditionalPhrases.fulfilled]: (state, action) => {\n                  return [...action.payload];\n            },\n            [deleteAdditionalPhrase.fulfilled]: (state, action) => {\n                  let index = state.findIndex(({orderId}) => orderId === action.payload.orderId);\n                  state.splice(index, 1);\n            },\n      }\n});\n\n\n\nconst { reducer } = uploadedAdditionalPhraseSlice;\nexport default reducer;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}