{"ast":null,"code":"import React from\"react\";import{IconButton}from\"@mui/material\";import AddIcon from'@mui/icons-material/Add';import{useDispatch,useSelector}from\"react-redux\";import{photoDirectAdded,photoUpdatedSrc}from\"../../../features/photoEdition/PhotoSlice\";import{nextButtonEnabled}from\"../../../features/handleFormButtons/FormButtonsSlice\";import{Fragment}from\"react\";import theme from\"../../../utils/theme\";/*\n      Button in order to add directly a photo. Works exactly like your model website's button.\n      Simplifies workflow as we do not have to call photoAdded action.\n*/import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var AddCardButton=function AddCardButton(_ref){var width=_ref.width,plusSize=_ref.plusSize;var dispatch=useDispatch();var photos=useSelector(function(state){return state.photos;});var handleImage=function handleImage(e){console.log(\"e.target\",e.target.files[0]);var imageBlob=URL.createObjectURL(e.target.files[0]);console.log(\"imgSrc: \",imageBlob);dispatch(photoDirectAdded({imgDimensions:\"20x20\",imgSrc:imageBlob,type:e.target.files[0].type}));// ONLY AT LEAST 3\nvar enableNext=true;// because this is dispatch image, there is a lag of one photo\n// so if we have 2 photos imgSrc already completed\n// and this function is called, then that means that a 3rd one\nvar imgCount=0;photos.map(function(photo){if(photo.imgSrc!==null){imgCount+=1;}});if(imgCount<2){enableNext=false;}if(enableNext){dispatch(nextButtonEnabled(true));}};return/*#__PURE__*/_jsx(Fragment,{children:/*#__PURE__*/_jsxs(IconButton,{sx:{width:width,height:width,backgroundColor:'rgb(255, 102, 196)',color:'#ffffff',\"&:hover\":{backgroundColor:theme.palette.primary.darker,color:\"#ffffff\"}},component:\"label\",color:\"primary\",\"aria-label\":\"upload picture\",children:[/*#__PURE__*/_jsx(\"input\",{hidden:true,accept:\"image/*\",multiple:true,type:\"file\",onChange:handleImage}),/*#__PURE__*/_jsx(AddIcon,{sx:{fontSize:plusSize}})]})});};export default AddCardButton;","map":{"version":3,"names":["React","IconButton","AddIcon","useDispatch","useSelector","photoDirectAdded","photoUpdatedSrc","nextButtonEnabled","Fragment","theme","jsx","_jsx","jsxs","_jsxs","AddCardButton","_ref","width","plusSize","dispatch","photos","state","handleImage","e","console","log","target","files","imageBlob","URL","createObjectURL","imgDimensions","imgSrc","type","enableNext","imgCount","map","photo","children","sx","height","backgroundColor","color","palette","primary","darker","component","hidden","accept","multiple","onChange","fontSize"],"sources":["/home/luc/Documents/luclongin.github.io/src/components/manageOrder/addCardButton/addCardButton.component.jsx"],"sourcesContent":["import React from \"react\";\nimport { IconButton } from \"@mui/material\";\nimport AddIcon from '@mui/icons-material/Add';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { photoDirectAdded, photoUpdatedSrc } from \"../../../features/photoEdition/PhotoSlice\";\nimport { nextButtonEnabled } from \"../../../features/handleFormButtons/FormButtonsSlice\";\nimport { Fragment } from \"react\";\nimport theme from \"../../../utils/theme\";\n/*\n      Button in order to add directly a photo. Works exactly like your model website's button.\n      Simplifies workflow as we do not have to call photoAdded action.\n*/\nconst AddCardButton = ({width, plusSize}) => {\n      const dispatch = useDispatch();\n      const photos = useSelector(state => state.photos);\n\n      const handleImage = (e) => {\n            \n            console.log(\"e.target\", e.target.files[0]);\n            const imageBlob = URL.createObjectURL(e.target.files[0]);\n            console.log(\"imgSrc: \", imageBlob);\n            dispatch(photoDirectAdded({\n                  imgDimensions: \"20x20\",\n                  imgSrc: imageBlob,\n                  type: e.target.files[0].type\n            }));\n\n            // ONLY AT LEAST 3\n            let enableNext = true;\n            // because this is dispatch image, there is a lag of one photo\n            // so if we have 2 photos imgSrc already completed\n            // and this function is called, then that means that a 3rd one\n           \n            let imgCount = 0;\n            photos.map(photo => {\n                  if(photo.imgSrc !== null) {\n                        imgCount += 1;  \n                  }\n            });\n            if(imgCount < 2) {\n                  enableNext = false;\n            }\n\n            if(enableNext) {\n                  dispatch(nextButtonEnabled(true));\n            }\n      }\n\n      return(\n            <Fragment>\n                  <IconButton\n                        sx={{\n                              width: width,\n                              height: width,\n                              backgroundColor: 'rgb(255, 102, 196)',\n                              color: '#ffffff',\n                              \"&:hover\" : {\n                                    backgroundColor: theme.palette.primary.darker,\n                                    color: \"#ffffff\"\n                              }\n                        }}\n                        component=\"label\"\n                        color=\"primary\"\n                        aria-label=\"upload picture\"\n                  >\n                        <input hidden accept=\"image/*\" multiple type=\"file\" onChange={handleImage}/>\n                        <AddIcon sx={{\n                              fontSize: plusSize\n                        }} />\n                  </IconButton>\n            </Fragment> \n      );\n}\n\nexport default AddCardButton;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,UAAU,KAAQ,eAAe,CAC1C,MAAO,CAAAC,OAAO,KAAM,yBAAyB,CAC7C,OAASC,WAAW,CAAEC,WAAW,KAAQ,aAAa,CACtD,OAASC,gBAAgB,CAAEC,eAAe,KAAQ,2CAA2C,CAC7F,OAASC,iBAAiB,KAAQ,sDAAsD,CACxF,OAASC,QAAQ,KAAQ,OAAO,CAChC,MAAO,CAAAC,KAAK,KAAM,sBAAsB,CACxC;AACA;AACA;AACA,EAHA,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAIA,GAAM,CAAAC,aAAa,CAAG,QAAhB,CAAAA,aAAaA,CAAAC,IAAA,CAA0B,IAArB,CAAAC,KAAK,CAAAD,IAAA,CAALC,KAAK,CAAEC,QAAQ,CAAAF,IAAA,CAARE,QAAQ,CACjC,GAAM,CAAAC,QAAQ,CAAGf,WAAW,CAAC,CAAC,CAC9B,GAAM,CAAAgB,MAAM,CAAGf,WAAW,CAAC,SAAAgB,KAAK,QAAI,CAAAA,KAAK,CAACD,MAAM,GAAC,CAEjD,GAAM,CAAAE,WAAW,CAAG,QAAd,CAAAA,WAAWA,CAAIC,CAAC,CAAK,CAErBC,OAAO,CAACC,GAAG,CAAC,UAAU,CAAEF,CAAC,CAACG,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC,CAC1C,GAAM,CAAAC,SAAS,CAAGC,GAAG,CAACC,eAAe,CAACP,CAAC,CAACG,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC,CACxDH,OAAO,CAACC,GAAG,CAAC,UAAU,CAAEG,SAAS,CAAC,CAClCT,QAAQ,CAACb,gBAAgB,CAAC,CACpByB,aAAa,CAAE,OAAO,CACtBC,MAAM,CAAEJ,SAAS,CACjBK,IAAI,CAAEV,CAAC,CAACG,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAACM,IAC9B,CAAC,CAAC,CAAC,CAEH;AACA,GAAI,CAAAC,UAAU,CAAG,IAAI,CACrB;AACA;AACA;AAEA,GAAI,CAAAC,QAAQ,CAAG,CAAC,CAChBf,MAAM,CAACgB,GAAG,CAAC,SAAAC,KAAK,CAAI,CACd,GAAGA,KAAK,CAACL,MAAM,GAAK,IAAI,CAAE,CACpBG,QAAQ,EAAI,CAAC,CACnB,CACN,CAAC,CAAC,CACF,GAAGA,QAAQ,CAAG,CAAC,CAAE,CACXD,UAAU,CAAG,KAAK,CACxB,CAEA,GAAGA,UAAU,CAAE,CACTf,QAAQ,CAACX,iBAAiB,CAAC,IAAI,CAAC,CAAC,CACvC,CACN,CAAC,CAED,mBACMI,IAAA,CAACH,QAAQ,EAAA6B,QAAA,cACHxB,KAAA,CAACZ,UAAU,EACLqC,EAAE,CAAE,CACEtB,KAAK,CAAEA,KAAK,CACZuB,MAAM,CAAEvB,KAAK,CACbwB,eAAe,CAAE,oBAAoB,CACrCC,KAAK,CAAE,SAAS,CAChB,SAAS,CAAG,CACND,eAAe,CAAE/B,KAAK,CAACiC,OAAO,CAACC,OAAO,CAACC,MAAM,CAC7CH,KAAK,CAAE,SACb,CACN,CAAE,CACFI,SAAS,CAAC,OAAO,CACjBJ,KAAK,CAAC,SAAS,CACf,aAAW,gBAAgB,CAAAJ,QAAA,eAE3B1B,IAAA,UAAOmC,MAAM,MAACC,MAAM,CAAC,SAAS,CAACC,QAAQ,MAAChB,IAAI,CAAC,MAAM,CAACiB,QAAQ,CAAE5B,WAAY,CAAC,CAAC,cAC5EV,IAAA,CAACT,OAAO,EAACoC,EAAE,CAAE,CACPY,QAAQ,CAAEjC,QAChB,CAAE,CAAE,CAAC,EACC,CAAC,CACT,CAAC,CAEvB,CAAC,CAED,cAAe,CAAAH,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}